<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.TweetDao">

    <resultMap id="BaseResultMap" type="Tweet">
        <!--@Table tweet-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="firstPicture" column="first_picture" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="views" column="views" jdbcType="INTEGER"/>
        <result property="likes" column="likes" jdbcType="INTEGER"/>
        <result property="commentable" column="commentable" jdbcType="INTEGER"/>
        <result property="published" column="published" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="tagIds" column="tag_ids" jdbcType="VARCHAR"/>
        <association property="user" javaType="User">
            <id property="id" column="uid"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, title, content, first_picture, status, views, likes, commentable, published, create_time, update_time, user_id, tag_ids
        from blog_mb.tweet
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, title, content, first_picture, status, views, likes, commentable, published, create_time, update_time, user_id, tag_ids
        from blog_mb.tweet
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, title, content, first_picture, status, views, likes, commentable, published, create_time, update_time, user_id, tag_ids
        from blog_mb.tweet
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="firstPicture != null and firstPicture != ''">
                and first_picture = #{firstPicture}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="views != null">
                and views = #{views}
            </if>
            <if test="likes != null">
                and likes = #{likes}
            </if>
            <if test="commentable != null">
                and commentable = #{commentable}
            </if>
            <if test="published != null">
                and published = #{published}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="tagIds != null and tagIds != ''">
                and tag_ids = #{tagIds}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into blog_mb.tweet(title, content, first_picture, status, views, likes, commentable, published, create_time, update_time, user_id, tag_ids)
        values (#{title}, #{content}, #{firstPicture}, #{status}, #{views}, #{likes}, #{commentable}, #{published}, #{createTime}, #{updateTime}, #{userId}, #{tagIds})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update blog_mb.tweet
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="firstPicture != null and firstPicture != ''">
                first_picture = #{firstPicture},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="views != null">
                views = #{views},
            </if>
            <if test="likes != null">
                likes = #{likes},
            </if>
            <if test="commentable != null">
                commentable = #{commentable},
            </if>
            <if test="published != null">
                published = #{published},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="tagIds != null and tagIds != ''">
                tag_ids = #{tagIds},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from blog_mb.tweet where id = #{id}
    </delete>

<!--    <select id="searchAllTweet" parameterType="Tweet" resultMap="BaseResultMap">-->
<!--        <bind name="pattern" value="'%' + title + '%'" />    /*模糊查询*/-->
<!--        select *-->
<!--        from tweet b-->
<!--        <where>-->
<!--            <if test="title != null">-->
<!--                and b.title like #{pattern}-->
<!--            </if>-->
<!--            <if test="content != null">-->
<!--                and b.content like #{pattern}-->
<!--            </if>-->
<!--                and status &lt; 2000 and published = 1-->
<!--        </where>-->
<!--    </select>-->


    <select id="searchAllTweet" parameterType="Tweet" resultMap="BaseResultMap">
        <bind name="pattern" value="'%' + title + '%'" />    /*模糊查询*/
        select *
        from tweet
        where (title like #{pattern} or content like #{pattern}) and status &lt; 2000 and published = 1
    </select>

<!--    select b.id, b.title, b.first_picture, b.views, b.update_time, b.content, b.likes, b.status, b.user_id-->
    <select id="getByDesc" resultMap="BaseResultMap">  /*主页博客展示*/
        select *
        from tweet
        where status &lt; 2000 and published = 1
        order by update_time desc
    </select>

</mapper>
